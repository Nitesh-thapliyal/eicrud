name: tests
on:
  workflow_dispatch: 
  pull_request:
    branches: ['develop']
  # push:
  #   branches: ['develop', 'main']
  # paths:
  #   - 'client/**'
  #   - 'core/**'
  #   - 'shared/**'
  #   - 'test/**'
  #   - 'db_*/**'

jobs:
  release-pretest:
    runs-on: ubuntu-latest
    timeout-minutes: 7
    services:
      mongodb:
        image: mongo
        ports:
        - 27017:27017
      postgres:
        image: postgres
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
    steps:
      - name: Copy repository
        uses: actions/checkout@v3

      - name: Setup
        run: npm i && npm run setup:cli && eicrud export dtos -cc

      - name: Convert types
        run: npm i -g typeconv@2.3.1 && cd test &&  typeconv -v -f ts -t oapi -o test_exports 'test_exports/**.ts' 'test_exports/**/*.ts' && cd ..

      - name: Export oapi with types
        run: eicrud export oapi 

      - name: setup client, rename test file
        run: npm run setup:oapi:client && node -e "fs.renameSync('./test/client/client.oapi-types.spec.ts.skip', './test/client/client.oapi-types.spec.ts')" 

      - name: Build
        run: npm run build

      - name: Mongodb tests
        run: npm run test

  # test:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 14

  #   services:
  #     mongodb:
  #       image: mongo
  #       ports:
  #       - 27017:27017
  #     postgres:
  #       image: postgres
  #       ports:
  #       - 5432:5432
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: admin
  #   steps:
  #     - name: Copy repository
  #       uses: actions/checkout@v3

  #     - name: Install Dependencies
  #       run: npm run setup:tests

  #     - name: Build
  #       run: npm run build

  #     - name: Mongodb tests
  #       run: npm run test

  #     - name: PostgreSQL tests
  #       run: npm run test:postgre

  #     - name: Microservices tests
  #       run: npm run start:test-ms

  #     - name: Microservices proxy tests
  #       run: npm run start:test-ms:proxy

  # test-cli-mongo:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 6

  #   services:
  #     mongodb:
  #       image: mongo
  #       ports:
  #       - 27017:27017
  #   steps:
  #     - name: Copy repository
  #       uses: actions/checkout@v3

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: CLI mongo
  #       run: ./test/test-cli.sh mongo
        